syntax = "proto3";

package microservio.project.v1;

option go_package = "github.com/microserv-io/microserv-io-grpc-go/microservio/project/v1;project";

service MicroserviceService {
  rpc ListMicroservices(ListMicroservicesRequest) returns (stream ListMicroservicesResponse) {}
  rpc GetMicroserviceByID(GetMicroserviceByIDRequest) returns (GetMicroserviceByIDResponse) {}
  rpc CreateMicroservice(CreateMicroserviceRequest) returns (CreateMicroserviceResponse) {}
  rpc UpdateMicroservice(UpdateMicroserviceRequest) returns (UpdateMicroserviceResponse) {}
}

message ListMicroservicesRequest {
  string project_id = 1;
}

message ListMicroservicesResponse {
  repeated Microservice microservices = 1;
}

message GetMicroserviceByIDRequest {
  string project_id = 1;
  string microservice_id = 2;
}

message GetMicroserviceByIDResponse {
  Microservice microservice = 1;
}

message CreateMicroserviceRequest {
  string project_id = 1;
  string name = 2;
  string cloud_provider = 3;
  string region = 4;
}

message CreateMicroserviceResponse {
  Microservice microservice = 1;
}

message UpdateMicroserviceRequest {
  string project_id = 1;
  string id = 2;
  string name = 3;
  string cloud_provider = 4;
  string region = 5;
}

message UpdateMicroserviceResponse {
  Microservice microservice = 1;
}

message Microservice {
  string id = 1;
  string name = 2;
  string git_connection_id = 3;
  string git_repository_path = 4;
  string git_reference = 5;
  string git_file_path = 6;
  string git_dockerfile_path = 7;
  repeated Variable runtime_variables = 8;
  repeated Variable build_args = 9;
  string service_type = 10;
  string port_number = 11;
  string http_health_check_path = 12;
  repeated string depends_on = 13;
}

message Variable {
  string key = 1;
  string value = 2;
  string is_secret = 3;
}
